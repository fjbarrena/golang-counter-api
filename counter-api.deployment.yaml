# If the image is in a private registry, uncomment the regcred lines and create the secret accordingly
# kubectl create secret docker-registry regcred --docker-server=YOUR_SERVER --docker-username=USER --docker-password=<putYourPasswordHere> --docker-email=YOUR_MAIL

apiVersion: apps/v1
kind: Deployment
metadata:
  name: counter-api-deployment
  labels:
    app: counter-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: counter-api
  template:
    metadata:
      labels:
        app: counter-api
    spec:
      containers:
        - name: fjbarrena/counter-api
          image: counter-api:latest
          env:
            - name: GOPORT
              value: "8080"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "200m"
              cpu: "1"
#      imagePullSecrets:
#        - name: regcred
---

apiVersion: v1
kind: Service
metadata:
  name: counter-api-service
  labels:
    app: counter-api
spec:
  selector:
    app: counter-api
  ports:
    - protocol: TCP
      name: web
      port: 8080

# Example of ingress using Traefik (http and redirection to https)
#
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: counter-ingress
# spec:
#   entryPoints:
#     - http
#   routes:
#   - match: Host(`fjbarrena.dev`) && PathPrefix(`/counter-api`)
#     kind: Rule
#     services:
#     - name: counter-api-service
#       port: 8080
#     middlewares:
#       - name: https-redirect

# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: counter-ingress-tls
# spec:
#   entryPoints:
#     - https
#   routes:
#   - match: Host(`fjbarrena.dev`) && PathPrefix(`/counter-api`)
#     kind: Rule
#     services:
#     - name: counter-api-service
#       port: 8080
#   tls: {}
